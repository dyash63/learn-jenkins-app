pipeline {
    agent any
    environment {
        REMOTE_USER = 'root' 
        REMOTE_HOST = '192.168.100.128' 
        SSH_CREDENTIALS_ID = 'your-ssh-credentials-id' 
    }
    stages {
        stage('Connect and Run Commands') {
            steps {
                script {
                    sshCommand = """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} << EOF
                        echo "Connected to remote server"
                        hostname
                        uptime
                    """
                }
                sshagent (credentials: [SSH_CREDENTIALS_ID]) {
                    sh sshCommand
                }
            }
        }
    }
}


pipeline {
    agent any
    environment {
        REMOTE_USER = 'root'
        REMOTE_HOST = '192.168.100.128'
        SSH_CREDENTIALS_ID = 'SSH_CREDENTIALS_ID'
    }
    stages {
        stage('Run Remote Commands') {
            steps {
                sshagent (credentials: [SSH_CREDENTIALS_ID]) {
                    sh """
                        ssh -tt -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} <<EOF
                        echo "Connected to the remote server"
                        hostname
                        uptime
                        EOF
                    """
                }
            }
        }
        stage('Check Root Filesystem') {
            steps {
                sshagent (credentials: [SSH_CREDENTIALS_ID]) {
                    sh """
                        ssh -tt -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} <<EOF
                        echo "Checking root filesystem usage..."
                        USAGE=\$(df -h / | tail -1 | awk '{print \$5}' | tr -d '%')
                        if [ \$USAGE -gt 80 ]; then
                            echo "Root filesystem usage is \$USAGE%. Performing cleanup."
                        else
                            echo "Root filesystem usage is \$USAGE%. No cleanup required."
                        fi
                        exit
                        EOF
                    """
                }
            }
        }            
    }
}
